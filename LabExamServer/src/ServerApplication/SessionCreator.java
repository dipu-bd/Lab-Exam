/*
 * Copyright (C) 2015 Dipu
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package ServerApplication;

import UtilityClass.Candidate;
import UtilityClass.Question;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dipu
 */
public class SessionCreator extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    public JFrame ParentForm;
    private final DefaultTableModel model;

    /**
     * Creates new form SessionCreator
     */
    public SessionCreator()
    {
        initComponents();
        model = (DefaultTableModel) candidateTable.getModel();
        loadValues();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        tabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        examTitle = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        examPath = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        startTimeSpinner = new javax.swing.JSpinner();
        pathBrowseButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        durationSpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        totalMarksBox = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        candidateTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        randomizePassButton = new javax.swing.JButton();
        addCandidateButton = new javax.swing.JButton();
        deleteCandidateButton = new javax.swing.JButton();
        saveToTextButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel5 = new javax.swing.JPanel();
        setQuestionButton = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        questionList = new javax.swing.JList();
        refreshButton1 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        questionTitle = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        markSpinner = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        questionBody = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        idLabel = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        nextButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Edit Lab Exam Session");
        setIconImages(null);
        setModal(true);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosed(java.awt.event.WindowEvent evt)
            {
                formWindowClosed(evt);
            }
        });

        tabbedPane.setBackground(new java.awt.Color(193, 239, 239));
        tabbedPane.setOpaque(true);
        tabbedPane.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                tabbedPaneStateChanged(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(252, 250, 255));

        jPanel11.setBackground(new java.awt.Color(179, 244, 244));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("General Information"));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Exam Title :");

        examTitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Exam Path :");

        examPath.setEditable(false);
        examPath.setBackground(new java.awt.Color(239, 239, 227));
        examPath.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Start Time :");

        startTimeSpinner.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        startTimeSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.AM_PM));

        pathBrowseButton.setText("Browse");
        pathBrowseButton.setToolTipText("Browse for path");
        pathBrowseButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                pathBrowseButtonActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Duration :");

        durationSpinner.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        durationSpinner.setModel(new javax.swing.SpinnerNumberModel(60, 10, 1000, 10));
        durationSpinner.setToolTipText("Duration of the examination in minutes");

        jLabel5.setText("minutes");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Total Marks :");

        totalMarksBox.setEditable(false);
        totalMarksBox.setBackground(new java.awt.Color(246, 255, 231));
        totalMarksBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(examTitle)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(examPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pathBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(startTimeSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(durationSpinner, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(totalMarksBox, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(examTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(examPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pathBrowseButton))
                .addGap(3, 3, 3)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(startTimeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(durationSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(totalMarksBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        examPath.setEditable(false);

        jPanel10.setBackground(new java.awt.Color(182, 229, 230));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("List of Candidates"));

        candidateTable.setAutoCreateRowSorter(true);
        candidateTable.setBackground(new java.awt.Color(245, 250, 255));
        candidateTable.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        candidateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "Name", "Registration No", "Password"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        candidateTable.setAutoscrolls(false);
        candidateTable.setCellSelectionEnabled(true);
        candidateTable.setFillsViewportHeight(true);
        candidateTable.setGridColor(java.awt.Color.cyan);
        candidateTable.setRowHeight(23);
        candidateTable.setSelectionBackground(java.awt.Color.cyan);
        candidateTable.setSelectionForeground(new java.awt.Color(0, 0, 51));
        candidateTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(candidateTable);
        candidateTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (candidateTable.getColumnModel().getColumnCount() > 0)
        {
            candidateTable.getColumnModel().getColumn(0).setPreferredWidth(80);
            candidateTable.getColumnModel().getColumn(0).setMaxWidth(100);
        }

        jPanel1.setBackground(new java.awt.Color(222, 234, 238));

        randomizePassButton.setText("Randomize Password");
        randomizePassButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                randomizePassButtonActionPerformed(evt);
            }
        });

        addCandidateButton.setText("Add");
        addCandidateButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addCandidateButtonActionPerformed(evt);
            }
        });

        deleteCandidateButton.setText("Delete");
        deleteCandidateButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                deleteCandidateButtonActionPerformed(evt);
            }
        });

        saveToTextButton.setText("Save To Text");
        saveToTextButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveToTextButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addCandidateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteCandidateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveToTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(randomizePassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(randomizePassButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCandidateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteCandidateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveToTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        tabbedPane.addTab("General", jPanel2);

        jSplitPane1.setDividerLocation(230);
        jSplitPane1.setResizeWeight(0.35);
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setDoubleBuffered(true);

        jPanel5.setBackground(new java.awt.Color(244, 239, 244));

        setQuestionButton.setText("Add");
        setQuestionButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                setQuestionButtonActionPerformed(evt);
            }
        });

        jLabel10.setText("List of questions :");

        questionList.setBackground(new java.awt.Color(234, 255, 255));
        questionList.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        questionList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        questionList.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                questionListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(questionList);

        refreshButton1.setText("Delete");
        refreshButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                refreshButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(setQuestionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 19, Short.MAX_VALUE)
                        .addComponent(refreshButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(refreshButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(setQuestionButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        jSplitPane1.setLeftComponent(jPanel5);

        jPanel6.setBackground(new java.awt.Color(172, 234, 234));

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Question Title :");

        questionTitle.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        questionTitle.setMinimumSize(new java.awt.Dimension(60, 23));
        questionTitle.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                questionTitleKeyReleased(evt);
            }
        });

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Mark :");

        markSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(10), Integer.valueOf(0), null, Integer.valueOf(1)));
        markSpinner.addChangeListener(new javax.swing.event.ChangeListener()
        {
            public void stateChanged(javax.swing.event.ChangeEvent evt)
            {
                markSpinnerStateChanged(evt);
            }
        });

        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Question Body :");

        questionBody.setColumns(20);
        questionBody.setRows(5);
        questionBody.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                questionBodyKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(questionBody);

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("ID :");

        idLabel.setBackground(new java.awt.Color(204, 255, 204));
        idLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        idLabel.setText("0");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(questionTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 277, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(markSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(questionTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(markSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(idLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane1.setRightComponent(jPanel6);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1)
                .addGap(0, 0, 0))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jSplitPane1)
                .addGap(0, 0, 0))
        );

        tabbedPane.addTab("Edit Questions", jPanel3);

        jPanel8.setBackground(new java.awt.Color(5, 225, 225));

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveButtonActionPerformed(evt);
            }
        });

        nextButton.setText("Next");
        nextButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nextButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel Edit");
        cancelButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButtonActionPerformed(evt);
            }
        });

        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5))
        );

        backButton.setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(tabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tabbedPane)
                .addGap(0, 0, 0)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public final void loadValues()
    {
        try
        {
            this.setTitle("Edit Lab Exam Session [" + CurrentExam.examFile.getName() + "]");

            //general values   
            examTitle.setText(CurrentExam.curExam.ExamTitle);
            startTimeSpinner.setValue(CurrentExam.curExam.StartTime);
            durationSpinner.setValue(CurrentExam.curExam.Duration);
            examPath.setText(CurrentExam.curExam.ExamPath.getAbsolutePath());

            //exam values 
            loadQuestionList();

            //user values 
            loadCandidateList();
        }
        catch (Exception ex)
        {
            Logger.getLogger(SessionCreator.class.getName()).log(Level.SEVERE,
                    "Error while loading values", ex);
        }
    }
 
    private void loadCandidateList()
    {
        model.setRowCount(0);
        for (Candidate cd : CurrentExam.curExam.allCandidate)
        {
            model.addRow(new Object[]
            {
                cd.uid, cd.name, cd.regno, cd.password
            });
        }
    }

    private void loadQuestionList()
    {
        totalMarksBox.setText(Integer.toString(CurrentExam.curExam.getTotalMarks()));
        questionList.setListData(CurrentExam.curExam.allQuestion.toArray());
    }

    private void loadQuestion(Question ques)
    {
        if (ques == null)
        {
            idLabel.setText("0");
            questionBody.setText("");
            questionTitle.setText("");
            markSpinner.setValue(0);
        }
        else
        {
            idLabel.setText(Integer.toString(ques.ID));
            questionBody.setText(ques.Body);
            questionTitle.setText(ques.Title);
            markSpinner.setValue(ques.Mark);
        }
    }

    private boolean saveValues()
    {
        try
        {
            CurrentExam.curExam.ExamTitle = examTitle.getText();
            CurrentExam.curExam.StartTime = (Date) startTimeSpinner.getValue();
            CurrentExam.curExam.Duration = (int) durationSpinner.getValue();

            setCandidates();
            setQuestion();

            CurrentExam.Save();
            return true;
        }
        catch (Exception ex)
        {
            Logger.getLogger(SessionCreator.class.getName()).log(Level.SEVERE,
                    "Error while saving session values", ex);
            return false;
        }
    }

    private void setCandidates()
    {
        for (int i = 0; i < model.getRowCount(); ++i)
        {
            int uid = (int) model.getValueAt(i, 0);
            Candidate cd = CurrentExam.curExam.getCandidate(uid);
            if (cd == null) continue;
            cd.name = ((String) model.getValueAt(i, 1)).trim();
            cd.regno = ((String) model.getValueAt(i, 2)).trim();
            cd.password = ((String) model.getValueAt(i, 3)).trim();
        }
    }

    private void setQuestion()
    {
        int id = Integer.parseInt(idLabel.getText());
        Question ques = CurrentExam.curExam.getQuestion(id);
        if (ques == null) return;
        ques.Body = questionBody.getText();
        ques.Title = questionTitle.getText().trim();
        ques.Mark = (int) markSpinner.getValue();
        totalMarksBox.setText(Integer.toString(CurrentExam.curExam.getTotalMarks()));
    }

    public void saveToTextFile()
    {
        try
        {
            JFileChooser saveFile = new JFileChooser();
            saveFile.setMultiSelectionEnabled(false);
            saveFile.setAcceptAllFileFilterUsed(false);
            saveFile.setSelectedFile(new File("examinee.txt"));
            saveFile.setFileFilter(new FileNameExtensionFilter("Text File", "txt"));
            if (saveFile.showSaveDialog(this) == JFileChooser.APPROVE_OPTION)
            {
                String data = CurrentExam.printUsers();
                File file = saveFile.getSelectedFile();
                FileOutputStream fos = new FileOutputStream(file);
                fos.write(data.getBytes());
                fos.close();
            }
        }
        catch (HeadlessException | IOException ex)
        {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE,
                    "Error while saving passwords", ex);
        }
    }


    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        if (ParentForm != null)
        {
            ParentForm.setVisible(true);
        }
    }//GEN-LAST:event_formWindowClosed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed

        if (!saveValues())
            return;

        int count = tabbedPane.getTabCount();
        int index = tabbedPane.getSelectedIndex();
        if (index + 1 < count)
        {
            tabbedPane.setSelectedIndex(index + 1);
        }
        else
        {
            this.dispose();
        }
    }//GEN-LAST:event_nextButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        saveValues();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void questionListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_questionListValueChanged
        Question ques = (Question) questionList.getSelectedValue();
        if (ques != null) loadQuestion(ques);
    }//GEN-LAST:event_questionListValueChanged

    private void setQuestionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setQuestionButtonActionPerformed
        CurrentExam.curExam.addQuestion();
        loadQuestionList();
    }//GEN-LAST:event_setQuestionButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        loadValues();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void markSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_markSpinnerStateChanged
        setQuestion();
    }//GEN-LAST:event_markSpinnerStateChanged

    private void refreshButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButton1ActionPerformed
        Question ques = (Question) questionList.getSelectedValue();
        if (ques != null)
        {
            CurrentExam.curExam.deleteQuestion(ques.ID);
        }
        loadQuestionList();
    }//GEN-LAST:event_refreshButton1ActionPerformed

    private void questionBodyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_questionBodyKeyReleased
        setQuestion();
    }//GEN-LAST:event_questionBodyKeyReleased

    private void questionTitleKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_questionTitleKeyReleased
        setQuestion();
    }//GEN-LAST:event_questionTitleKeyReleased

    private void pathBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pathBrowseButtonActionPerformed
        JFileChooser openPath = new JFileChooser();
        openPath.setAcceptAllFileFilterUsed(false);
        openPath.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (openPath.showDialog(this, "Select Folder") == JFileChooser.APPROVE_OPTION)
        {
            File file = openPath.getSelectedFile();
            if (file.isFile())
            {
                file = file.getParentFile();
            }
            CurrentExam.curExam.ExamPath = file;
            examPath.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_pathBrowseButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        int index = tabbedPane.getSelectedIndex();
        if (index - 1 >= 0)
        {
            tabbedPane.setSelectedIndex(index - 1);
        }
    }//GEN-LAST:event_backButtonActionPerformed

    private void tabbedPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabbedPaneStateChanged
        int count = tabbedPane.getTabCount();
        int index = tabbedPane.getSelectedIndex();
        backButton.setVisible(index > 0);
        if (index + 1 == count)
        {
            nextButton.setText("OK");
        }
        else
        {
            nextButton.setText("Next");
        }
    }//GEN-LAST:event_tabbedPaneStateChanged

    private void randomizePassButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_randomizePassButtonActionPerformed
    {//GEN-HEADEREND:event_randomizePassButtonActionPerformed
        for (Candidate cd : CurrentExam.curExam.allCandidate)
        {
            cd.randomizePassword();
        }
        loadCandidateList();
    }//GEN-LAST:event_randomizePassButtonActionPerformed

    private void addCandidateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addCandidateButtonActionPerformed
    {//GEN-HEADEREND:event_addCandidateButtonActionPerformed
        int last = CurrentExam.curExam.LastUserID;
        CurrentExam.curExam.addCandidate("", "");
        Candidate cd = CurrentExam.curExam.getCandidate(last);
        model.addRow(new Object[]
        {
            cd.uid, cd.name, cd.regno, cd.password
        });
    }//GEN-LAST:event_addCandidateButtonActionPerformed

    private void deleteCandidateButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_deleteCandidateButtonActionPerformed
    {//GEN-HEADEREND:event_deleteCandidateButtonActionPerformed
        int r = candidateTable.getSelectedRow();
        if (r < 0) return;
        int uid = (int) model.getValueAt(r, 0);
        CurrentExam.curExam.deleteCandidate(uid);
        model.removeRow(r);
    }//GEN-LAST:event_deleteCandidateButtonActionPerformed

    private void saveToTextButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveToTextButtonActionPerformed
    {//GEN-HEADEREND:event_saveToTextButtonActionPerformed
        saveToTextFile();
    }//GEN-LAST:event_saveToTextButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCandidateButton;
    private javax.swing.JButton backButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTable candidateTable;
    private javax.swing.JButton deleteCandidateButton;
    private javax.swing.JSpinner durationSpinner;
    private javax.swing.JTextField examPath;
    private javax.swing.JTextField examTitle;
    private javax.swing.JLabel idLabel;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSpinner markSpinner;
    private javax.swing.JButton nextButton;
    private javax.swing.JButton pathBrowseButton;
    private javax.swing.JTextArea questionBody;
    private javax.swing.JList questionList;
    private javax.swing.JTextField questionTitle;
    private javax.swing.JButton randomizePassButton;
    private javax.swing.JButton refreshButton1;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveToTextButton;
    private javax.swing.JButton setQuestionButton;
    private javax.swing.JSpinner startTimeSpinner;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField totalMarksBox;
    // End of variables declaration//GEN-END:variables
}
